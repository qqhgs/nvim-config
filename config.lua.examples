vim.api.nvim_set_keymap("n", "<F6>", ":terminal lazygit<CR>", { noremap = true, silent = false })

Ryn.format_on_save = true

Ryn.plugins = {
  -- add your plugins
  includes = {
    { "~/project/nvim/rynkai.nvim", after = "packer.nvim", config = [[require"ryn.plugins.rynkai".setup()]] },
    "rafamadriz/friendly-snippets",
    { "norcalli/nvim-colorizer.lua", config = [[require"ryn.user.colorizer"]] },
    "hrsh7th/cmp-path",
    "hrsh7th/cmp-cmdline",
    "hrsh7th/cmp-nvim-lua",
    { "windwp/nvim-ts-autotag", after = "nvim-treesitter" },
    "dstein64/vim-startuptime",
  },
  -- remove builtin plugins
  excludes = {
    "qqhgs/rynkai.nvim",
    -- "goolord/alpha-nvim",
    -- "kyazdani42/nvim-web-devicons",
  },
}

-- set keymaps
local keymaps = require "ryn.user.keymaps"
require("ryn.config.keymaps").add_keymaps(keymaps)

-- if if array will be inserted
-- if key-value will be override
Ryn.builtins.user = {
  rynkai = {
    theme = "onedark",
    config_file = vim.fn.stdpath "config" .. "/config.lua",
  },
  cmp = {
    sources = {
      { name = "nvim_lua" },
      { name = "path" },
      { name = "cmdline" },
    },
    formatting = {
      source_names = {
        nvim_lua = "[Nvim]",
        path = "[Path]",
        cmdline = "[CMD]",
      },
    },
    fn = function()
      require("cmp").setup.cmdline("/", { sources = { { name = "buffer" } } })
      require("cmp").setup.cmdline(":", { sources = { { name = "cmdline" } } })
    end,
  },
  treesitter = {
    ensure_installed = {
      "html",
      "css",
      "scss",
      "c",
      "go",
      "json",
      "javascript",
      "svelte",
      "php",
      "lua",
      "vim",
      "bash",
      "markdown",
    },
    autotag = {
      enable = true,
    },
  },
  toggleterm = {
    callback = function()
      local Terminal = require("toggleterm.terminal").Terminal
      local lazygit = Terminal:new { cmd = "lazygit", hidden = true }
      function _LAZYGIT_TOGGLE()
        lazygit:toggle()
      end
    end,
  },
}

Ryn.lsp_settings = {
  on_attach = {
    ["tsserver"] = function(client)
      client.resolved_capabilities.document_formatting = false
    end,
  },
  servers = {
    ["sumneko_lua"] = {
      settings = {
        Lua = {
          diagnostics = {
            globals = { "vim" },
          },
          workspace = {
            library = {
              [vim.fn.expand "$VIMRUNTIME/lua"] = true,
              vim.api.nvim_get_runtime_file("", true),
              [vim.fn.stdpath "config" .. "/lua"] = true,
            },
            maxPreload = 100000,
            preloadFileSize = 10000,
          },
        },
      },
    },
    ["emmet_ls"] = {
      filetypes = { "html", "css", "typescriptreact", "javascriptreact", "svelte" },
    },
  },
}
